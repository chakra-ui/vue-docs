{"_path":"/getting-started/design-principles","_dir":"getting-started","_draft":false,"_partial":false,"_locale":"","_empty":false,"title":"Design Principles","description":"Principles that keeps Chakra's components fairly consistent","tags":["principles"],"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"design-principles"},"children":[{"type":"text","value":"Design Principles"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Chakra UI Vue is established on principles that keep its components fairly\nconsistent. Understanding these concepts will help you better contribute to\nChakra UI Vue."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Our goal is to design simple, composable components that cater to real-life UI\ndesign problems. In order to do that, we developed a set of principles that help\nus always be on that path."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Style Props:"}]},{"type":"text","value":" All component styles can be overridden or extended via style\nprops to reduce the use of "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"css"}]},{"type":"text","value":" prop or "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"styled()"}]},{"type":"text","value":". Compose new components\nfrom "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Box"}]},{"type":"text","value":"."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Simplicity:"}]},{"type":"text","value":" Strive to keep the component API fairly simple and show real\nworld scenarios of using the component."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Composition:"}]},{"type":"text","value":" Break down components into smaller parts with minimal props\nto keep complexity low, and compose them together. This will ensure that the\nstyles and functionality are flexible and extensible."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Accessibility:"}]},{"type":"text","value":" When creating a component, keep accessibility top of mind.\nThis includes keyboard navigation, focus management, color contrast, voice\nover, and the correct "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"aria-*"}]},{"type":"text","value":" attributes."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Dark Mode:"}]},{"type":"text","value":" Make components dark mode compatible. Use "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"useColorMode"}]},{"type":"text","value":" hook\nto handle styling."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Naming Props:"}]},{"type":"text","value":" We all know naming is the hardest thing in this industry.\nGenerally, ensure a prop name is indicative of what it does. Boolean props\nshould be named using auxiliary verbs such as "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"does"}]},{"type":"text","value":", "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"has"}]},{"type":"text","value":", "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"is"}]},{"type":"text","value":" and\n"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"should"}]},{"type":"text","value":". For example, "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Button"}]},{"type":"text","value":" uses "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"isDisabled"}]},{"type":"text","value":", "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"isLoading"}]},{"type":"text","value":", etc."}]}]}],"toc":{"title":"","searchDepth":3,"depth":5,"links":[]}},"_type":"markdown","_id":"content:1.getting-started:3.design-principles.md","_source":"content","_file":"1.getting-started/3.design-principles.md","_extension":"md"}